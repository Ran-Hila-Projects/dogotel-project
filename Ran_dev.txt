Dogotel Backend API Requirements
================================

1. Get All Rooms
----------------
- Endpoint: GET /api/rooms
- Description: Returns a list of all room objects for management purposes.
- Response Example:
[
  {
    "id": "1",
    "title": "The Cozy Kennel",
    "subtitle": "Perfect for Solo Nappers 💤",
    "description": "A quiet, comfy room...",
    "dogsAmount": 1,
    "price": 55,
    "size": "30m²",
    "image": "data:image/jpeg;base64,...",
    "reviews": [
      { "name": "Hila", "stars": 5, "review": "..." }
    ]
  },
  ...
]


---

2. Get Room Details
-------------------
- Endpoint: GET /api/rooms/:id
- Description: Returns detailed info for a specific room, including features, reviews, and all booking-relevant data.
- Response Example:
  {
    "id": "cozy-kennel",
    "title": "The Cozy Kennel",
    "subtitle": "Perfect for Solo Nappers 💤",
    "description": "A quiet, comfy room...",
    "dogsAllowed": 1,
    "size": "30m²",
    "price": 55,
    "imageUrl": "/rooms-images/room-1.jpg",
    "features": ["Daily housekeeping...", "Soft orthopedic bed", ...],
    "included": ["...", "..."],
    "reviews": [
      { "name": "Hila Tsivion", "stars": 5, "review": "Amazing experience!" }
    ]
  }

---

3. Get Room Unavailable Dates
-----------------------------
- Endpoint: GET /api/rooms/:id/unavailable-dates
- Description: Returns a list of date ranges or individual dates when the room is already booked.
- Response Example:
  {
    "roomId": "cozy-kennel",
    "unavailableDates": [
      "2024-07-10",
      "2024-07-11",
      "2024-07-12",
      "2024-07-20"
    ]
  }

---

4. Get User Bookings
-------------------------------
- Endpoint: GET /api/bookings?userId=...
- Description: Returns all bookings for a specific user (for a future "My Bookings" page).
- Response Example:
  [
    {
      "bookingId": "booking-456",
      "roomId": "cozy-kennel",
      "startDate": "2024-07-15",
      "endDate": "2024-07-18",
      "dogs": [ ... ]
    }
  ]

---

5. Create a Booking (with Dining and Services)
יש לקחת פה בחשבון שלא בטוח יהיה שירותים נלווים שנבחרו
----------------------------------------------
- Endpoint: POST /api/bookings
- Description: Creates a new booking for a room, including selected dining and services.
- Request Example:
  {
    "roomId": "cozy-kennel",
    "startDate": "2024-07-15",
    "endDate": "2024-07-18",
    "dogs": [
      { "name": "Rex", "breed": "Labrador", "age": 3, "notes": "Loves toys" }
    ],
    "diningId": ["full-day-meals"], 
    "serviceIds": ["grooming", "fitness-training"],
    "userId": "user-123"
  }
- Response Example:
  {
    "success": true,
    "bookingId": "booking-456"
  }

---

6. Get Dining/Services Details
-----------------------------------------
- Endpoint: GET /api/dining/:id
- Endpoint: GET /api/services/:id
- Description: Returns details for a specific dining or service option.
- Response Example:
  {
    "id": "grooming",
    "title": "Grooming",
    "description": "Fresh, clean, and fluffy...",
    "price": 30,
    "details": "..."
  }

---

7. Add a Review (Authenticated, Only After Stay)
------------------------------------------------
- Endpoint: POST /api/rooms/:id/reviews
- Description: Allows a logged-in user to add a review for a room, but only if they have a completed booking for that room.
- Requirements:
  - User must be authenticated (send userId or via session/JWT).
  - Server must check that the user has a completed booking for the room before accepting the review.
- Request Example:
  {
    "userId": "user-123",
    "stars": 5,
    "review": "Amazing experience! My dog loved it!"
  }
- Response Example:
  {
    "success": true,
    "reviewId": "review-789"
  }
- Error Example (not logged in or not eligible):
  {
    "success": false,
    "error": "User must be logged in and have a completed booking for this room to leave a review."
  }

---

8. Get Room Unavailable Date Ranges
-----------------------------------
- Endpoint: GET /api/rooms/:id/unavailable-ranges
- Description: Returns a list of unavailable date ranges for a specific room (for booking logic).
- Response Example:
  {
    "roomId": "cozy-kennel",
    "unavailableRanges": [
      { "start": "2025-07-10", "end": "2025-07-12" },
      { "start": "2025-07-20", "end": "2025-07-20" },
      { "start": "2026-01-14", "end": "2026-01-14" }
    ]
  }

---

9. Post request to save the booking details
----------------------------------
- Endpoint: POST /api/bookings
- Description: Saves a new booking, including room, dining, services, dog details, and total price.
- Request Body Example:
{
  "userEmail": "user1@example.com",
  "room": {
    "roomId": "3",
    "roomTitle": "Garden Sniff Suite",
    "startDate": "2025-07-10",
    "endDate": "2025-07-14",
    "pricePerNight": 65,
    "dogs": [
      {
        "name": "Bella",
        "breed": "Golden Retriever",
        "age": 3,
        "notes": "Loves cuddles"
      }
    ]
  },
  "dining": {
    "id": "d1",
    "title": "Premium Meal Plan",
    "price": 30
  },
  "services": [
    {
      "id": "s1",
      "title": "Grooming",
      "price": 25
    },
    {
      "id": "s2",
      "title": "Extra Walks",
      "price": 15
    }
  ],
  "totalPrice": 320
}
- Success Response Example:
{
  "success": true,
  "bookingId": "b789",
  "message": "Booking saved successfully"
}
- Error Response Example:
{
  "success": false,
  "error": "Room is not available for the selected dates"
}

---

10. Create a New Room
-----------------------------------
- Endpoint: POST /api/rooms
- Description: Adds a new room with the given data.
- Request Body:
{
  "title": "Family Fur Cabin",
  "subtitle": "Perfect for Pupper Parties 🐾🎉",
  "description": "Perfect for 3 furry siblings...",
  "dogsAmount": 3,
  "price": 100,
  "size": "60m²",
  "image": "data:image/jpeg;base64,...",  // base64 or image URL
  "reviews": []
}
- Response Example:
{
  "success": true,
  "id": "6" // newly created room ID
}

---

11. Update Room Details
-----------------------------------
- Endpoint: PUT /api/rooms/:id
- Description: Updates an existing room by ID.
- Request Body:
{
  "title": "Updated Title",
  "subtitle": "Updated Type",
  "description": "Updated desc...",
  "dogsAmount": 2,
  "price": 90,
  "size": "45m²",
  "image": "data:image/jpeg;base64,..."
}
- Response Example:
{
  "success": true
}

---

12. Delete Room
-------------------------
- Endpoint: DELETE /api/rooms/:id
- Description: Deletes the room by its ID.
- Response Example:
{
  "success": true
}

---

13. Get Bookings
-------------------------
- Endpoint: GET /api/bookings
- Description: Returns all user bookings sorted by creation date.
- Response Example:
[
  {
    "bookingId": "b3",
    "user": "user2@example.com",
    "room": "Deluxe Duo Den",
    "dogs": ["Max"],
    "startDate": "2025-07-10",
    "endDate": "2025-07-13",
    "createdAt": "2025-06-01T12:30:00Z"
  },
  ...
]
 
---

14. 