Dogotel Backend API Requirements
================================

1. Get All Rooms
----------------
- Endpoint: GET /api/rooms
- Description: Returns a list of all rooms with all relevant data for the rooms page.
- Response Example:
  [
    {
      "id": "cozy-kennel",
      "title": "The Cozy Kennel",
      "description": "Perfect for solo nappers...",
      "dogsAllowed": 1,
      "pricePerNight": 55,
      "imageUrl": "/rooms-images/room-1.jpg"
    },
    ...
  ]

---

2. Get Room Details
-------------------
- Endpoint: GET /api/rooms/:id
- Description: Returns detailed info for a specific room, including features, reviews, and all booking-relevant data.
- Response Example:
  {
    "id": "cozy-kennel",
    "title": "The Cozy Kennel",
    "subtitle": "Perfect for Solo Nappers 💤",
    "description": "A quiet, comfy room...",
    "dogsAllowed": 1,
    "size": "30m²",
    "price": 55,
    "imageUrl": "/rooms-images/room-1.jpg",
    "features": ["Daily housekeeping...", "Soft orthopedic bed", ...],
    "included": ["...", "..."],
    "reviews": [
      { "name": "Hila Tsivion", "stars": 5, "review": "Amazing experience!" }
    ]
  }

---

3. Get Room Unavailable Dates
-----------------------------
- Endpoint: GET /api/rooms/:id/unavailable-dates
- Description: Returns a list of date ranges or individual dates when the room is already booked.
- Response Example:
  {
    "roomId": "cozy-kennel",
    "unavailableDates": [
      "2024-07-10",
      "2024-07-11",
      "2024-07-12",
      "2024-07-20"
    ]
  }

---

4. Get User Bookings
-------------------------------
- Endpoint: GET /api/bookings?userId=...
- Description: Returns all bookings for a specific user (for a future "My Bookings" page).
- Response Example:
  [
    {
      "bookingId": "booking-456",
      "roomId": "cozy-kennel",
      "startDate": "2024-07-15",
      "endDate": "2024-07-18",
      "dogs": [ ... ]
    }
  ]

---

5. Create a Booking (with Dining and Services)
יש לקחת פה בחשבון שלא בטוח יהיה שירותים נלווים שנבחרו
----------------------------------------------
- Endpoint: POST /api/bookings
- Description: Creates a new booking for a room, including selected dining and services.
- Request Example:
  {
    "roomId": "cozy-kennel",
    "startDate": "2024-07-15",
    "endDate": "2024-07-18",
    "dogs": [
      { "name": "Rex", "breed": "Labrador", "age": 3, "notes": "Loves toys" }
    ],
    "diningId": ["full-day-meals"], 
    "serviceIds": ["grooming", "fitness-training"],
    "userId": "user-123"
  }
- Response Example:
  {
    "success": true,
    "bookingId": "booking-456"
  }

---

6. Get Dining/Services Details
-----------------------------------------
- Endpoint: GET /api/dining/:id
- Endpoint: GET /api/services/:id
- Description: Returns details for a specific dining or service option.
- Response Example:
  {
    "id": "grooming",
    "title": "Grooming",
    "description": "Fresh, clean, and fluffy...",
    "price": 30,
    "details": "..."
  }

---

7. Add a Review (Authenticated, Only After Stay)
------------------------------------------------
- Endpoint: POST /api/rooms/:id/reviews
- Description: Allows a logged-in user to add a review for a room, but only if they have a completed booking for that room.
- Requirements:
  - User must be authenticated (send userId or via session/JWT).
  - Server must check that the user has a completed booking for the room before accepting the review.
- Request Example:
  {
    "userId": "user-123",
    "stars": 5,
    "review": "Amazing experience! My dog loved it!"
  }
- Response Example:
  {
    "success": true,
    "reviewId": "review-789"
  }
- Error Example (not logged in or not eligible):
  {
    "success": false,
    "error": "User must be logged in and have a completed booking for this room to leave a review."
  }

---

8. Get Room Unavailable Date Ranges
-----------------------------------
- Endpoint: GET /api/rooms/:id/unavailable-ranges
- Description: Returns a list of unavailable date ranges for a specific room (for booking logic).
- Response Example:
  {
    "roomId": "cozy-kennel",
    "unavailableRanges": [
      { "start": "2025-07-10", "end": "2025-07-12" },
      { "start": "2025-07-20", "end": "2025-07-20" },
      { "start": "2026-01-14", "end": "2026-01-14" }
    ]
  }

---

9. Post request to save the booking details

---

10. 