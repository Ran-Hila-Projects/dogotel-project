{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "Dogotel Backend API for AWS Learner Lab",

  "Globals": {
    "Function": {
      "Runtime": "nodejs20.x",
      "Timeout": 30,
      "MemorySize": 256
    },
    "Api": {
      "Cors": {
        "AllowMethods": "'*'",
        "AllowHeaders": "'*'",
        "AllowOrigin": "'*'",
        "MaxAge": "'86400'"
      }
    }
  },

  "Parameters": {
    "ProjectName": { "Type": "String", "Default": "dogotel" },
    "CognitoDomainPrefix": {
      "Type": "String",
      "Default": "dogotel-auth"
    }
  },

  "Resources": {
    "UserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "UserPoolName": { "Fn::Sub": "${ProjectName}-UserPool" }
      }
    },

    "UserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": { "Fn::Sub": "${ProjectName}-WebClient" },
        "UserPoolId": { "Ref": "UserPool" },
        "GenerateSecret": false,
        "ExplicitAuthFlows": [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ]
      }
    },

    "UserPoolDomain": {
      "Type": "AWS::Cognito::UserPoolDomain",
      "Properties": {
        "UserPoolId": { "Ref": "UserPool" },
        "Domain": { "Ref": "CognitoDomainPrefix" }
      }
    },

    "ImagesBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": { "Fn::Sub": "${ProjectName}-images-${AWS::AccountId}" },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": false,
          "BlockPublicPolicy": false,
          "IgnorePublicAcls": false,
          "RestrictPublicBuckets": false
        }
      }
    },

    "ImagesBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": { "Ref": "ImagesBucket" },
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": { "Fn::Sub": "arn:aws:s3:::${ImagesBucket}/*" }
            }
          ]
        }
      }
    },

    "AuthFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": { "Fn::Sub": "${ProjectName}-Auth" },
        "Handler": "auth_handler.handler",
        "Role": "arn:aws:iam::__ACCOUNT_ID__:role/LabRole",
        "CodeUri": "src/handlers/",
        "Environment": {
          "Variables": {
            "COGNITO_USER_POOL_ID": { "Ref": "UserPool" },
            "COGNITO_CLIENT_ID": { "Ref": "UserPoolClient" },
            "USERS_TABLE": { "Ref": "UsersTable" }
          }
        },
        "Events": {
          "AuthRegister": {
            "Type": "Api",
            "Properties": {
              "Path": "/auth/register",
              "Method": "post"
            }
          },
          "AuthRegisterOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/auth/register",
              "Method": "options"
            }
          },
          "AuthLogin": {
            "Type": "Api",
            "Properties": {
              "Path": "/auth/login",
              "Method": "post"
            }
          },
          "AuthLoginOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/auth/login",
              "Method": "options"
            }
          },
          "AuthCheckAdmin": {
            "Type": "Api",
            "Properties": {
              "Path": "/auth/check-admin",
              "Method": "post"
            }
          },
          "AuthCheckAdminOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/auth/check-admin",
              "Method": "options"
            }
          }
        }
      }
    },

    "RoomsFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": { "Fn::Sub": "${ProjectName}-Rooms" },
        "Handler": "rooms_handler.handler",
        "Role": "arn:aws:iam::__ACCOUNT_ID__:role/LabRole",
        "CodeUri": "src/handlers/",
        "Environment": {
          "Variables": {
            "DYNAMODB_TABLE_ROOMS": { "Ref": "RoomsTable" },
            "DYNAMODB_TABLE_BOOKINGS": { "Ref": "BookingsTable" }
          }
        },
        "Events": {
          "GetRooms": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms",
              "Method": "get"
            }
          },
          "GetRoom": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}",
              "Method": "get"
            }
          },
          "CreateRoom": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms",
              "Method": "post"
            }
          },
          "UpdateRoom": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}",
              "Method": "put"
            }
          },
          "DeleteRoom": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}",
              "Method": "delete"
            }
          },
          "GetUnavailableDates": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}/unavailable-dates",
              "Method": "get"
            }
          },
          "GetUnavailableRanges": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}/unavailable-ranges",
              "Method": "get"
            }
          },
          "RoomsOptionsBase": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms",
              "Method": "options"
            }
          },
          "RoomsOptionsId": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}",
              "Method": "options"
            }
          },
          "RoomsOptionsUnavailable": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}/unavailable-dates",
              "Method": "options"
            }
          },
          "RoomsOptionsRanges": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}/unavailable-ranges",
              "Method": "options"
            }
          },
          "GetRoomReviews": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}/reviews",
              "Method": "get"
            }
          },
          "AddRoomReview": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}/reviews",
              "Method": "post"
            }
          },
          "RoomReviewsOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/rooms/{id}/reviews",
              "Method": "options"
            }
          }
        }
      }
    },

    "BookingsFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": { "Fn::Sub": "${ProjectName}-Bookings" },
        "Handler": "bookings_handler.handler",
        "Role": "arn:aws:iam::__ACCOUNT_ID__:role/LabRole",
        "CodeUri": "src/handlers/",
        "Environment": {
          "Variables": {
            "DYNAMODB_TABLE_BOOKINGS": { "Ref": "BookingsTable" },
            "DYNAMODB_TABLE_ROOMS": { "Ref": "RoomsTable" },
            "BOOKING_EVENTS_QUEUE_URL": { "Ref": "BookingEventsQueue" },
            "ADMIN_NOTIFICATIONS_TOPIC_ARN": { "Ref": "AdminNotificationsTopic" },
            "USER_NOTIFICATIONS_TOPIC_ARN": { "Ref": "UserNotificationsTopic" }
          }
        },
        "Events": {
          "GetBookings": {
            "Type": "Api",
            "Properties": {
              "Path": "/bookings",
              "Method": "get"
            }
          },
          "CreateBooking": {
            "Type": "Api",
            "Properties": {
              "Path": "/bookings",
              "Method": "post"
            }
          },
          "BookingsOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/bookings",
              "Method": "options"
            }
          },
          "GetBookingHistory": {
            "Type": "Api",
            "Properties": {
              "Path": "/bookings/{email}",
              "Method": "get"
            }
          },
          "GetBookingHistoryOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/bookings/{email}",
              "Method": "options"
            }
          }
        }
      }
    },

    "InitializeDataFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": { "Fn::Sub": "${ProjectName}-Initialize" },
        "Handler": "initialize_data_handler.handler",
        "Role": "arn:aws:iam::__ACCOUNT_ID__:role/LabRole",
        "CodeUri": "src/handlers/",
        "Environment": {
          "Variables": {
            "ROOMS_TABLE": { "Ref": "RoomsTable" },
            "USERS_TABLE": { "Ref": "UsersTable" },
            "USER_POOL_ID": { "Ref": "UserPool" },
            "IMAGES_BUCKET": { "Ref": "ImagesBucket" }
          }
        },
        "Events": {
          "InitializeData": {
            "Type": "Api",
            "Properties": {
              "Path": "/admin/initialize",
              "Method": "post"
            }
          },
          "InitializeDataOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/admin/initialize",
              "Method": "options"
            }
          }
        }
      }
    },

    "RekognitionFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": { "Fn::Sub": "${ProjectName}-Rekognition" },
        "Handler": "rekognition_handler.handler",
        "Role": "arn:aws:iam::__ACCOUNT_ID__:role/LabRole",
        "CodeUri": "src/handlers/",
        "Events": {
          "DetectBreed": {
            "Type": "Api",
            "Properties": {
              "Path": "/api/rekognition/detect-breed",
              "Method": "post"
            }
          },
          "DetectBreedOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/api/rekognition/detect-breed",
              "Method": "options"
            }
          }
        }
      }
    },

    "UserFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": { "Fn::Sub": "${ProjectName}-User" },
        "Handler": "user_handler.handler",
        "Role": "arn:aws:iam::__ACCOUNT_ID__:role/LabRole",
        "CodeUri": "src/handlers/",
        "Environment": {
          "Variables": {
            "USERS_TABLE": { "Ref": "UsersTable" },
            "DOGS_TABLE": { "Ref": "DogsTable" }
          }
        },
        "Events": {
          "GetUserProfile": {
            "Type": "Api",
            "Properties": {
              "Path": "/user/{email}",
              "Method": "get"
            }
          },
          "GetUserProfileOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/user/{email}",
              "Method": "options"
            }
          },
          "UpdateProfilePhoto": {
            "Type": "Api",
            "Properties": {
              "Path": "/user/profile-photo",
              "Method": "post"
            }
          },
          "UpdateProfilePhotoOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/user/profile-photo",
              "Method": "options"
            }
          },
          "UpdateUserProfile": {
            "Type": "Api",
            "Properties": {
              "Path": "/user/profile",
              "Method": "put"
            }
          },
          "UpdateUserProfileOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/user/profile",
              "Method": "options"
            }
          },
          "SaveDog": {
            "Type": "Api",
            "Properties": {
              "Path": "/api/user/dogs",
              "Method": "post"
            }
          },
          "GetUserDogs": {
            "Type": "Api",
            "Properties": {
              "Path": "/api/user/dogs",
              "Method": "get"
            }
          },
          "UserDogsOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/api/user/dogs",
              "Method": "options"
            }
          }
        }
      }
    },

    "NotificationsFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": { "Fn::Sub": "${ProjectName}-Notifications" },
        "Handler": "notifications_handler.handler",
        "Role": "arn:aws:iam::__ACCOUNT_ID__:role/LabRole",
        "CodeUri": "src/handlers/",
        "Environment": {
          "Variables": {
            "ADMIN_NOTIFICATIONS_TOPIC_ARN": { "Ref": "AdminNotificationsTopic" },
            "USER_NOTIFICATIONS_TOPIC_ARN": { "Ref": "UserNotificationsTopic" },
            "DAILY_ROOMS_TOPIC_ARN": { "Ref": "DailyRoomsNotificationsTopic" }
          }
        },
        "Events": {
          "AdminSubscribe": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/admin/subscribe",
              "Method": "post"
            }
          },
          "AdminSubscribeOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/admin/subscribe",
              "Method": "options"
            }
          },
          "AdminSubscriptionStatus": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/admin/status",
              "Method": "get"
            }
          },
          "AdminSubscriptionStatusOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/admin/status",
              "Method": "options"
            }
          },
          "UserBookingConfirmation": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/user/confirm-booking",
              "Method": "post"
            }
          },
          "UserBookingConfirmationOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/user/confirm-booking",
              "Method": "options"
            }
          },
          "DailyRoomsSubscribe": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/daily-rooms/subscribe",
              "Method": "post"
            }
          },
          "DailyRoomsSubscribeOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/daily-rooms/subscribe",
              "Method": "options"
            }
          },
          "DailyRoomsUnsubscribe": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/daily-rooms/unsubscribe",
              "Method": "post"
            }
          },
          "DailyRoomsUnsubscribeOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/daily-rooms/unsubscribe",
              "Method": "options"
            }
          },
          "TestAdminNotification": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/test-admin",
              "Method": "post"
            }
          },
          "TestAdminNotificationOptions": {
            "Type": "Api",
            "Properties": {
              "Path": "/notifications/test-admin",
              "Method": "options"
            }
          }
        }
      }
    },

    "RoomsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "DogotelRooms",
        "AttributeDefinitions": [
          { "AttributeName": "room_id", "AttributeType": "S" }
        ],
        "KeySchema": [{ "AttributeName": "room_id", "KeyType": "HASH" }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },

    "BookingsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "DogotelBookings",
        "AttributeDefinitions": [
          { "AttributeName": "bookingId", "AttributeType": "S" },
          { "AttributeName": "userEmail", "AttributeType": "S" },
          { "AttributeName": "room_id", "AttributeType": "S" }
        ],
        "KeySchema": [{ "AttributeName": "bookingId", "KeyType": "HASH" }],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "UserEmailIndex",
            "KeySchema": [{ "AttributeName": "userEmail", "KeyType": "HASH" }],
            "Projection": { "ProjectionType": "ALL" },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          },
          {
            "IndexName": "RoomBookingsIndex",
            "KeySchema": [{ "AttributeName": "room_id", "KeyType": "HASH" }],
            "Projection": { "ProjectionType": "ALL" },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },

    "ReviewsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "DogotelReviews",
        "AttributeDefinitions": [
          { "AttributeName": "review_id", "AttributeType": "S" }
        ],
        "KeySchema": [{ "AttributeName": "review_id", "KeyType": "HASH" }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },

    "DiningTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "DogotelDining",
        "AttributeDefinitions": [
          { "AttributeName": "dining_id", "AttributeType": "S" }
        ],
        "KeySchema": [{ "AttributeName": "dining_id", "KeyType": "HASH" }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },

    "ServicesTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "DogotelServices",
        "AttributeDefinitions": [
          { "AttributeName": "service_id", "AttributeType": "S" }
        ],
        "KeySchema": [{ "AttributeName": "service_id", "KeyType": "HASH" }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },

    "UsersTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "DogotelUsers",
        "AttributeDefinitions": [
          { "AttributeName": "email", "AttributeType": "S" }
        ],
        "KeySchema": [{ "AttributeName": "email", "KeyType": "HASH" }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },

    "DogsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "DogotelDogs",
        "AttributeDefinitions": [
          { "AttributeName": "dogId", "AttributeType": "S" },
          { "AttributeName": "userEmail", "AttributeType": "S" }
        ],
        "KeySchema": [{ "AttributeName": "dogId", "KeyType": "HASH" }],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "UserEmailIndex",
            "KeySchema": [{ "AttributeName": "userEmail", "KeyType": "HASH" }],
            "Projection": { "ProjectionType": "ALL" },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },

    "BookingEventsQueue": { "Type": "AWS::SQS::Queue" },
    "BookingConfirmationTopic": { 
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": { "Fn::Sub": "${ProjectName}-booking-confirmations" },
        "DisplayName": "Dogotel Booking Confirmations"
      }
    },
    "AdminNotificationsTopic": { 
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": { "Fn::Sub": "${ProjectName}-admin-notifications" },
        "DisplayName": "Dogotel Admin Notifications"
      }
    },
    "UserNotificationsTopic": { 
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": { "Fn::Sub": "${ProjectName}-user-notifications" },
        "DisplayName": "Dogotel User Notifications"
      }
    },
    "DailyRoomsNotificationsTopic": { 
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": { "Fn::Sub": "${ProjectName}-daily-rooms" },
        "DisplayName": "Dogotel Daily Room Availability"
      }
    },
    "DailyRoomsQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": { "Fn::Sub": "${ProjectName}-daily-rooms-queue" },
        "VisibilityTimeout": 60
      }
    },
    "DailyRoomsFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": { "Fn::Sub": "${ProjectName}-DailyRooms" },
        "Handler": "daily_rooms_handler.handler",
        "Role": "arn:aws:iam::__ACCOUNT_ID__:role/LabRole",
        "CodeUri": "src/handlers/",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "ROOMS_TABLE": { "Ref": "RoomsTable" },
            "BOOKINGS_TABLE": { "Ref": "BookingsTable" },
            "DAILY_ROOMS_TOPIC_ARN": { "Ref": "DailyRoomsNotificationsTopic" },
            "DAILY_ROOMS_QUEUE_URL": { "Ref": "DailyRoomsQueue" }
          }
        },
        "Events": {
          "DailySchedule": {
            "Type": "Schedule",
            "Properties": {
              "Schedule": "cron(0 8 * * ? *)",
              "Description": "Triggers daily room notifications at 8 AM UTC",
              "Enabled": true
            }
          }
        }
      }
    }
  },

  "Outputs": {
    "DogotelApiUrl": {
      "Description": "API Gateway endpoint URL",
      "Value": {
        "Fn::Sub": "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      }
    },

    "ImagesBucketName": {
      "Description": "S3 Bucket for images",
      "Value": { "Ref": "ImagesBucket" }
    },

    "CognitoUserPoolId": {
      "Description": "Cognito User Pool ID",
      "Value": { "Ref": "UserPool" }
    },

    "CognitoUserPoolClientId": {
      "Description": "Cognito User Pool Client ID",
      "Value": { "Ref": "UserPoolClient" }
    }
  }
}
